apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 27
    buildToolsVersion '27.0.0'
    defaultConfig {
        applicationId "cn.nicolite.huthelper"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 22556
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a'//, 'arm64-v8a', 'armeabi', 'x86'//, 'x86_64', "mips"
        }

        //从appKey.properties文件中拉取信息
        def appKeyStream = new FileInputStream(rootProject.file('appKey.properties'))
        def appKeyProperties = new Properties()
        appKeyProperties.load(appKeyStream)

        manifestPlaceholders = [
                XG_ACCESS_ID  : appKeyProperties.get("XG_ACCESS_ID"),
                XG_ACCESS_KEY : appKeyProperties.get("XG_ACCESS_KEY"),
                MTA_APPKEY    : appKeyProperties.get("MTA_APPKEY"),
                MTA_CHANNEL   : appKeyProperties.get("MTA_CHANNEL"),
                RONG_CLOUD_KEY: appKeyProperties.get("RONG_CLOUD_KEY"),
                GAODE_APIKEY  : appKeyProperties.get("GAODE_APIKEY")
        ]
    }

    dexOptions {
        jumboMode true
        javaMaxHeapSize "2g"
    }

    signingConfigs {
        //从signing.properties文件中拉取签名信息
        def keystoreStream = new FileInputStream(rootProject.file('signing.properties'))
        def keyProperties = new Properties()
        keyProperties.load(keystoreStream)

        config {
            keyAlias keyProperties.getProperty('KEY_ALIAS')
            keyPassword keyProperties.getProperty('KEY_PWD')
            storeFile file(keyProperties.getProperty('KEYSTORE_FILE'))
            storePassword keyProperties.getProperty('KEYSTORE_PWD')
        }

        release {
            keyAlias keyProperties['KEY_ALIAS']
            keyPassword keyProperties['KEY_PWD']
            storeFile file(keyProperties['KEYSTORE_FILE'])
            storePassword keyProperties['KEYSTORE_PWD']
        }

        debug {
            keyAlias keyProperties['KEY_ALIAS']
            keyPassword keyProperties['KEY_PWD']
            storeFile file(keyProperties['KEYSTORE_FILE'])
            storePassword keyProperties['KEYSTORE_PWD']
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            buildConfigField("boolean", "LOG_DEBUG", "false")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            buildConfigField("boolean", "LOG_DEBUG", "true")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

    }

    greendao {
        schemaVersion 1
        daoPackage "cn.nicolite.huthelper.db.dao"
        targetGenDir "src/main/java"
        generateTests false
        targetGenDirTests "src/androidTest/java"
    }

    //升级gradle版本后居然不能用了
    //  applicationVariants.all {
    //      variant ->
    //          variant.outputs.each {
    //              output ->
    //                  def outputFile = output.outputFile
    //                  if (outputFile != null && outputFile.name.endsWith(".apk")) {
    //                      def dirName = outputFile.parent
    //                      def fileName = "huthelper-${variant.flavorName}-${variant.versionName}(${variant.versionCode}).apk"
    //                      output.outputFile = new File(dirName, fileName)
    //                  }
    //          }
    //  }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    packagingOptions {
        //rxjava1和rxjava2冲突
        exclude 'META-INF/rxjava.properties'
    }

    productFlavors {
        //酷安
        kuan {
            flavorDimensions "kuan"
            manifestPlaceholders = [
                    MTA_CHANNEL: "酷安"
            ]
        }
        //小米
        xiaomi {
            flavorDimensions "xiaomi"
            manifestPlaceholders = [
                    MTA_CHANNEL: "小米应用商店"
            ]
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'com.android.support:cardview-v7:27.0.2'
    compile 'com.android.support:recyclerview-v7:27.0.2'
    compile 'com.android.support:support-annotations:27.0.2'
    testCompile 'junit:junit:4.12'

    //多dex配置,解决dex超过64k
    compile 'com.android.support:multidex:1.0.2'

    //retrofit okhttp rxjava
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //生命周期管理
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.2.0'

    // If you want to bind to Android-specific lifecycles
    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.0'

    // If you want pre-written Activities and Fragments you can subclass as providers
    compile 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.0'

    //Glide--图片加载
    compile 'com.github.bumptech.glide:glide:3.8.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.5.0'

    //图片滤镜处理
    compile 'jp.wasabeef:glide-transformations:2.0.2'

    // If you want to use the GPU Filters（使用GPU）
    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'

    //Luban---图片压缩
    compile 'top.zibin:Luban:1.1.3'

    //PhotoView----图片放大缩小
    compile 'com.github.chrisbanes:PhotoView:2.0.0'

    //图片选择
    compile 'com.zhihu.android:matisse:0.4.3'

    //ButterKnife
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.7.0'
    compile 'com.jakewharton:butterknife:8.7.0'

    //Gson---json解析
    compile 'com.google.code.gson:gson:2.8.1'

    //动画低版本支持
    compile 'com.nineoldandroids:library:2.4.0'

    //权限管理
    compile 'com.yanzhenjie:permission:1.1.2'

    // bugly升级sdk
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.3'

    //滑动退出Activity
    compile 'com.r0adkll:slidableactivity:2.0.5'

    //网页抓取
    compile 'org.jsoup:jsoup:1.10.3'

    //LRecyclerView
    compile 'com.github.jdsjlzx:LRecyclerView:1.4.3'

    //小红点
    compile 'q.rorbin:badgeview:1.1.2'

    //信鸽推送
    compile 'com.tencent.xinge:xinge:3.1.8-alpha'

    //wup包 如果和其他腾讯系的sdk 发生wup冲突，这个依赖可不添加
    compile 'com.tencent.wup:wup:1.0.0.E-alpha'

    //mid包
    compile 'com.tencent.mid:mid:3.74-alpha'

    //MTA的jar包
    compile 'com.qq.mta:mta:3.1.4-alpha'

    //融云kit
    compile project(':IMKit')

    //数据库
    compile 'org.greenrobot:greendao:3.2.2'
    //数据库升级数据迁移
    compile 'com.github.yuweiguocn:GreenDaoUpgradeHelper:v2.0.1'

    //ijkplayer 视频播放
    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.8.4'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.4'

    //compile 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.4'
    //ExoPlayer as IMediaPlayer: optional, experimental
    compile 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.4'

    //内存泄露检测
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
}
